!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common"),require("@angular/forms"),require("@ng-bootstrap/ng-bootstrap")):"function"==typeof define&&define.amd?define("ngx-week-day-selector",["exports","@angular/core","@angular/common","@angular/forms","@ng-bootstrap/ng-bootstrap"],t):t((e=e||self)["ngx-week-day-selector"]={},e.ng.core,e.ng.common,e.ng.forms,e.ngBootstrap)}(this,function(e,t,o,n,r){"use strict";function a(e){var t="function"==typeof Symbol&&e[Symbol.iterator],o=0;return t?t.call(e):{next:function(){return e&&o>=e.length&&(e=void 0),{value:e&&e[o++],done:!e}}}}var i=function(){function e(){}return e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),l=function(){function e(){this.weekdays=[],this.defaultSelection=[],this.size="sm",this.onDaySelected=new t.EventEmitter,this.daysCollection=new Map}return e.prototype.ngOnInit=function(){var e,t,o,n;try{for(var r=a(this.weekdays),i=r.next();!i.done;i=r.next()){var l=i.value;this.daysCollection.set(l,!1)}}catch(u){e={error:u}}finally{try{i&&!i.done&&(t=r["return"])&&t.call(r)}finally{if(e)throw e.error}}if(this.defaultSelection)try{for(var c=a(this.defaultSelection),s=c.next();!s.done;s=c.next()){l=s.value;this.daysCollection.set(l,!0)}}catch(d){o={error:d}}finally{try{s&&!s.done&&(n=c["return"])&&n.call(c)}finally{if(o)throw o.error}}this.onDaySelected.emit([])},e.prototype.getSize=function(){return"btn-"+this.size},e.prototype.onClick=function(e,t){console.log(t),e.preventDefault(),e.stopPropagation(),this.selectDay(t);var o=this.getSelectedDay();this.onDaySelected.emit(o)},e.prototype.isSelected=function(e){return this.daysCollection.get(e)},e.prototype.selectDay=function(e){this.daysCollection.get(e)?this.daysCollection.set(e,!1):this.daysCollection.set(e,!0)},e.prototype.getSelectedDay=function(){var e=[];return Array.from(this.daysCollection.entries(),function(t){t[1]&&e.push(t[0])}),e},e.decorators=[{type:t.Component,args:[{selector:"ngx-week-day-selector",template:'<div class="btn-group btn-group-toggle" style="background-color:#999">\n    <label  *ngFor="let day of weekdays" class="btn-primary" ngbButtonLabel>\n      <div [ngClass]="getSize()" >\n        <input type="checkbox"  (click)="onClick($event, day)" [ngModel]="isSelected(day)" ngbButton> {{day}}\n      </div>\n      </label>\n</div>\n\n',styles:[":host ::ng-deep .btn-primary{background-color:#999;border-color:#999}"]}]}],e.ctorParameters=function(){return[]},e.propDecorators={weekdays:[{type:t.Input}],defaultSelection:[{type:t.Input}],size:[{type:t.Input}],onDaySelected:[{type:t.Output}]},e}(),c=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[l],imports:[n.FormsModule,o.CommonModule,r.NgbModule],exports:[l]}]}],e}();e.NgxWeekDaySelectorComponent=l,e.NgxWeekDaySelectorModule=c,e.NgxWeekDaySelectorService=i,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-week-day-selector.umd.min.js.map